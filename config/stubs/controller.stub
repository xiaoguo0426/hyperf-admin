<?php

declare(strict_types=1);

namespace %NAMESPACE%;

use App\Exception\EmptyException;
use App\Exception\InvalidAccessException;
use App\Exception\ResultException;
use App\Exception\InvalidArgumentsException;
use Hyperf\Di\Annotation\Inject;
use Hyperf\HttpServer\Annotation\AutoController;
use App\Controller\AbstractController;
/**
 * @menu 菜单名
 * @AutoController()
 * Class AuthController
 * @package App\Controller
 */
class %CLASS% extends AbstractController
{

    private $logic;

     /**
      * @auth 列表
      */
    public function list()
    {
        if (!$this->isGet()) {
            throw new InvalidAccessException();
        }
        //TODO list logic

        return $this->response->success([]);
    }

    /**
     * @auth 添加
     */
    public function add()
    {
        if (!$this->isPost()) {
            throw new InvalidAccessException();
        }
        //TODO add logic
        return $this->response->success([]);
    }

    /**
     * @auth 详情
     */
    public function info()
    {
        if (!$this->isGet()) {
            throw new InvalidAccessException();
        }
        //TODO info logic

        return $this->response->success([]);
    }

    /**
     * @auth 删除
     */
    public function del()
    {
        if (!$this->isPost()) {
            throw new InvalidAccessException();
        }
        //TODO del logic

        return $this->response->success([]);
    }

    /**
     * @auth 编辑
     */
    public function edit()
    {
        if (!$this->isPost()) {
            throw new InvalidAccessException();
        }

        //TODO edit logic

        return $this->response->success([]);
    }

    /**
     * @auth 禁用
     */
    public function forbid()
    {
        if (!$this->isPost()) {
            throw new InvalidAccessException();
        }
        //TODO forbid logic

        return $this->response->success([]);
    }

    /**
     * @auth 启用
     */
    public function resume()
    {
        if (!$this->isPost()) {
            throw new InvalidAccessException();
        }

        //TODO resume logic

        return $this->response->success([]);
    }

    /**
     * @ignore 忽略方法
     */
    public function ignore()
    {
        if (!$this->isPost()) {
            throw new InvalidAccessException();
        }

        //TODO resume logic

        return $this->response->success([]);
    }
}
